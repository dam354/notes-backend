{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","content","onClick","services_notes","axios","get","then","response","data","newObject","post","id","put","concat","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","useEffect","noteService","notesToShow","filter","toggleImportanceOf","find","n","changedNote","objectSpread","returnedNote","map","catch","error","alert","components_Note","key","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","value","onChange","target","type","ReactDOM","render","src_App","document","getElementById"],"mappings":"wLAaeA,EAXF,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACEC,EAAAC,EAAAC,cAAA,UACGN,EAAKO,QACNH,EAAAC,EAAAC,cAAA,UAAQE,QAASP,GAAmBC,qBCS3BO,EAfA,WAEX,OADgBC,IAAMC,IAHV,cAIGC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAa9BL,EAVA,SAAAM,GAEX,OADgBL,IAAMM,KARV,aAQwBD,GACrBH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQ9BL,EALA,SAACQ,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,GAAAC,OAbJ,aAaI,KAAAA,OAAwBF,GAAMF,GAC/BH,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QC2E9BM,EArFH,WAAM,IAAAC,EACUC,mBAAS,IADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACFI,EADEJ,EAAA,GAAAK,EAEcN,mBAAS,IAFvBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETE,EAFSD,EAAA,GAEAE,EAFAF,EAAA,GAAAG,EAGcV,oBAAS,GAHvBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGTE,EAHSD,EAAA,GAGAE,EAHAF,EAAA,GAKhBG,oBAAU,WACRC,IAEGzB,KAAK,SAAAC,GACJc,EAASd,MAEZ,IAEH,IAAMyB,EAAcJ,EAChBR,EACAA,EAAMa,OAAO,SAAAvC,GAAI,OAAIA,EAAKG,YAgCxBqC,EAAqB,SAAAvB,GACzB,IAAMjB,EAAO0B,EAAMe,KAAK,SAAAC,GAAC,OAAIA,EAAEzB,KAAOA,IAChC0B,EAAWnB,OAAAoB,EAAA,EAAApB,CAAA,GAAQxB,EAAR,CAAcG,WAAYH,EAAKG,YAEhDkC,EACUpB,EAAI0B,GAAa/B,KAAK,SAAAiC,GAC5BlB,EAASD,EAAMoB,IAAI,SAAA9C,GAAI,OAAIA,EAAKiB,KAAOA,EAAKjB,EAAO6C,OAEpDE,MAAM,SAAAC,GACLC,MAAK,aAAA9B,OACUnB,EAAKO,QADf,sCAGLoB,EAASD,EAAMa,OAAO,SAAAG,GAAC,OAAIA,EAAEzB,KAAOA,QAI1C,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAM2B,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC9B,EAAAC,EAAAC,cAAA,UAtDegC,EAAYQ,IAAI,SAAA9C,GAAI,OACrCI,EAAAC,EAAAC,cAAC4C,EAAD,CACEC,IAAKnD,EAAKiB,GACVjB,KAAMA,EACNC,iBAAkB,kBAAMuC,EAAmBxC,EAAKiB,UAqDhDb,EAAAC,EAAAC,cAAA,QAAM8C,SA7CM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBhD,QAASuB,EACT0B,MAAM,IAAIC,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,GAC3B3C,GAAIS,EAAMmC,OAAS,GAGrBxB,EACUkB,GACP3C,KAAK,SAAAC,GACJc,EAASD,EAAMP,OAAON,IACtBkB,EAAW,QAiCX3B,EAAAC,EAAAC,cAAA,SACEwD,MAAOhC,EACPiC,SApDiB,SAACV,GACxBtB,EAAWsB,EAAMW,OAAOF,UAqDpB1D,EAAAC,EAAAC,cAAA,UAAQ2D,KAAK,UAAb,WChFRC,IAASC,OACP/D,EAAAC,EAAAC,cAAC8D,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.ee558a96.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport axios from 'axios'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(response => {\n        setNotes(response)\n      })\n  }, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(response => {\n        setNotes(notes.concat(response))\n        setNewNote('')\n      })\n  }\n\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote).then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        alert(\n          `the note '${note.content}' was already deleted from server`\n        )\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'  \n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}